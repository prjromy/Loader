@model Loader.Models.Designation
@using Loader.Helper

<script src="~/Scripts/ch-treeview.js"></script>
@{
    Layout = null;
    ViewBag.DepIdForWithOutMe = Model.DGId;
    var test = Model;
    var treeobj = new Loader.ViewModel.TreeViewParam(false, true, true, 0, Model.PDGId, ViewBag.ActiveText, "Select Designation", "");
    Loader.ViewModel.TreeViewParam paramData = (Loader.ViewModel.TreeViewParam)ViewData["param"];
    var title = "Create Designation";
    if (Model.DGId != 0)
    {
        title = "Edit Designation";
    }
    var itemSize = "col-md-12";
    if (ViewBag.Heirarchy == 0)
    {
        itemSize = "col-md-9";
    }
    var valueSubmit = "Create";
    if (Model.DGId != 0)
    {
        valueSubmit = "Save";
    }
}
<div class="box box-warning Designation-create">
    <div class="box-header with-border">

        <h3 class="box-title">@title </h3>

        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="collapse"> <i class="fa fa-minus"></i></button>
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div><!-- /.box-tools -->
    </div><!-- /.box-header -->
    @*@using (Ajax.BeginForm("GetPatients", "Patient", new AjaxOptions
        {//GetPatients is name of method in PatientController
            InsertionMode = InsertionMode.Replace, //target element(#patientList) will be replaced
            UpdateTargetId = "patientList",
            LoadingElementId = "loader" // div with .gif loader - that is shown when data are loading
        }))*@
    @using (Html.BeginForm("Create", "Designation", FormMethod.Post, new { @id = "createDesignation" }))
    {
        <div class="box-body">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                @Html.HiddenFor(x => x.DGId)
                @Html.HiddenFor(x => x.PostedBy)
                @Html.HiddenFor(x => x.PostedOn)

                @if (ViewBag.Heirarchy == 1)
                {

                    <div class="form-group @itemSize">
                        @Html.LabelFor(model => model.PDGId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">

                            @Html.EditorForTree(model => model.PDGId, treeobj)
                            @Html.ValidationMessageFor(model => model.PDGId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                }

                <div class="form-group @itemSize">
                    @Html.LabelFor(model => model.DGName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DGName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DGName, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div><!-- /.box-body -->
        <div class="box-footer">

            <div class="col-md-offset-11">
                <input type="submit" id="btnSubmit" value="@valueSubmit" class="btn btn-default" />
            </div>

        </div><!-- box-footer -->

    }
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    @*<script src="~/Scripts/ch-treeview.js"></script>*@
    @section Scripts {

        @Scripts.Render("~/bundles/jqueryval")
    }

</div><!-- /.box -->

<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        $(".display-txt#PDesignationId").focus();
        $("#createDesignation").submit(function () {
            debugger;

            var form = $(this);
            form.validate();
            if (form.valid() == false) {
                InfoAlert("The Required Feild is Empty",1500);
                return false;
            }

            var container = $(this).closest('.panel-create');
            var formData = new FormData($(this)[0]);
            var nodeId = $(this).closest('.Designation-create').find('input#DGId').val()
            var wrapperClass = $(this).closest("explore-details").find(".panel-list");
            var tempPnode = $(this).closest('.Designation-create').find('input.internal-value').val(); //Dorje
            $.MessageBox({
                buttonDone: "Yes",
                buttonFail: "No",
                message: "Are you sure?"
            }).done(function () {


                $.ajax({
                    url: '@Url.Action("Create", "Designation")',
                    type: 'POST',
                    data: formData,
                    async: false,
                    success: function (data) {
                        debugger;
                        $(container).html(data);
                        if(@ViewBag.Heirarchy==0)
                        {
                            debugger
                            $('.panel-list').trigger('nodeClick', [{ nodeId: nodeId }]);
                        }
                        else
                        {
                            debugger
                            @*if(@ViewBag.isEdit == 1)
                            {
                                var pnodeId = pnode;
                            }*@
                          
                            $.fn.updateTreeview2("Designation","_UpdateDesignationTree",nodeId,-1,@ViewBag.isEdit,tempPnode )
                        }
                        if(@Model.DGId!=0)
                        {
                            debugger
                            SuccessAlert("Designation Edited Succesfully.",1500);
                        }
                        else
                        {
                            debugger
                            SuccessAlert("Designation Added Succesfully.",1500);
                        }


                    },
                    error: function (data) {
                        debugger;
                        ErrorAlert(data.responseText, 15000)
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            }).fail(function () {
                //$.MessageBox("you clicked no");
            });

            return false;
        });
        @*$('form').submit(function () {
            debugger;
            var serializedForm = $(this).serialize();
            var nodeId = $(this).find('.section-treeview#PDesignationId').find('.internal-value').val()
            var data = { Designation: serializedForm,form1 }
            $.ajax({
                url: '@Url.Action("Create", "Designation")',
                cache: false,
                contentType: false,
                processData: false,
                type: "POST",
                data:serializedForm,
                success: function () {
                    debugger;
                    $.fn.updateTreeview('Designation', '_UpdateDesignationTree', nodeId, -1)
                    //function (controller, action, selectedNode, rootNode)
                    //$('.Designation-treeview').find('.treeview-area').load("/Designation/_GetDesignationTree", { param: TreeViewParam })
                    //debugger;
                    //$('#explore-details').find('#list').load("/Designation/_Details", { parentId: pid, allowSelectGroup: allowselect })
                },
                error: function (result) {
                    alert("Failed");
                }

            });

            return false;
        });*@


        $('.Designation-create').on('change', '#IsGroup', function (e) {
            debugger;
            e.stopPropagation();
            var container = $(this).closest(".Designation-create").find(".action-controller")
            var contextCheck = $(this).closest(".Designation-create").find("input#IsContextDesignation").prop("checked")
            if (!this.checked && contextCheck == false) {
                $.ajax({
                    type: "get",
                    url: '@Url.Action("_CreateAction", "Designation")',
                    contentType: "application/json; charset=utf-8",
                    // data: { parentId: data.nodeId, allowSelectGroup: data.allowSelectGroupNode },
                    dataType: "html",
                    success: function (html) {
                        $(container).html(html);
                    },
                    error: function () {
                        alert("error");
                    }
                });
            }
            else {
                $(container).html("");
            }
        });

        $('.Designation-create').on('change', '#IsContextDesignation', function (e) {
            debugger;
            e.stopPropagation();
            var container = $(this).closest(".Designation-create").find(".action-controller")
            var groupCheck = $(this).closest(".Designation-create").find("input#IsGroup").prop("checked")
            if (!this.checked && groupCheck == false) {
                $.ajax({
                    type: "get",
                    url: '@Url.Action("_CreateAction", "Designation")',
                    contentType: "application/json; charset=utf-8",
                    // data: { parentId: data.nodeId, allowSelectGroup: data.allowSelectGroupNode },
                    dataType: "html",
                    success: function (html) {
                        $(container).html(html);
                    },
                    error: function () {
                        alert("error");
                    }
                });
            }
            else {
                $(container).html("");
            }
        });

        $('.Designation-create').on('filterTree', '.section-treeview', function (e, data) {
            debugger;

            e.stopPropagation();
            data.param.WithOutMe=@ViewBag.DepIdForWithOutMe;
            if (data.fromPopUp == 'false') {

                $dlg_dpicker.load("/Designation/_GetDesignationTreePopup", { param: data.param })
            }
            else {
                $dlg_dpicker.find('.treeview-area').load("/Designation/_GetDesignationTree", { param: data.param })

            }


        });

    });

</script>

<style>
    div#loadimage {
        zoom: 27%;
        margin: -89px -3px -29px 81px;
    }
</style>
