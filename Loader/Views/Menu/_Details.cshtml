@model IEnumerable<Loader.Models.Menu>
@using Loader.Helper



@{
    var test = Model;
    var id = ViewBag.ViewType;
    string address = ViewBag.Address.ToString();
    var pMenuId = ViewBag.ParentMenuId;
    var check = Model.Select(x => x.MenuId);
}



<div class="box box-success">
    <div class="box-header" style="background-color:cornflowerblue; color:white;">

        <div class="col-md-9" style="margin:-5px; padding-left:0px;">
            @if (ViewBag.ParentMenuId != 0)
            {
                <button type="button" id="btn-back" class="glyphicon glyphicon-backward" style="background-color:cornflowerblue;border:none;" value="Back"></button>
            }
            <b>Address:</b>
            @Html.Label("address", @address)


        </div>

        @*<input type="button" class="btn-default" value="Back" id="btnBack" />*@

        <div class="box-tools" style="margin: -6px 0 0 0;">
            @*<div class="listSearch"style="color:black;">


                </div>*@
            @*<input type="button" value="Create" id="btnCreateMenu" class="btn-default" />*@
            <div class="pmenuId">@Html.HiddenFor(x => pMenuId)</div>
            <input type="text" name="text-filter-tree" class="btn btn-box-tool txtSearch" placeholder="Search..." style="background-color:white;height:30px;">
            @*<button type="button" name="search" class="btn btn-box-tool btnSearch" style="color:white;">
                    <i class="fa fa-search"></i>
                </button>*@
          
            <button class="btn btn-box-tool btn-create-menu" style="color:white;"> <i class="fa fa-plus"></i></button>
            
            <button class="btn btn-box-tool listView" style="color:white;"> <i class="fa fa-list-ul"></i></button>

            <button class="btn btn-box-tool" style="color:white;" data-widget="collapse"> <i class="fa fa-minus"></i></button>


        </div>
    </div><!-- /.box-header -->

    <div class="box-body">

        @if (ViewBag.ViewType == 1)
        {
            var hasChild = Model.Count();
            if (hasChild == 0)
            {
               <b> No Childs found to Display</b>
            }
            else
            {
                foreach (var item in Model)
                {

                    <div class="col-md-3 col-xs-6 detailsList">
                        <!-- small box -->
                        @Html.Partial("_GridView", item)
                    </div><!-- ./col -->
                }
            }
        }
        else
        {

            var hasChild = Model.Count();
            if (hasChild == 0)
            {
                <b> No Childs found to Display</b>
            }
            else
            {
            <div class="listTable" style="max-height:400px;overflow:auto;">
                @Html.Partial("_ListViewMain", Model)
            </div>
            }
        }

    </div><!-- /.box-body -->
</div>

<style>
    .details {
        width: 30%;
        max-height: 129px;
    }

    input.btn.btn-box-tool.txtSearch {
        cursor: text;
    }
</style>
