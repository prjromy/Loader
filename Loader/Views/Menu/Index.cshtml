@model IEnumerable<Loader.Models.Menu>
@*<script src="~/Scripts/ch-treeview.js"></script>*@
@{
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Menu Setup";
    var test = Model;
}

@{
  
    var menuTreeview = (Loader.ViewModel.TreeView)ViewBag.treeview;
    Loader.ViewModel.TreeViewParam param = (Loader.ViewModel.TreeViewParam)ViewData["param"];
}

<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title"> @ViewBag.Title </h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div><!-- /.box-tools -->
    </div><!-- /.box-header -->

    <div class="box-body">
        <div id="explorer" class="menu-explore">
            @Html.Hidden("viewType", 1)
            <div class="col-md-3 menu-treeview section-treeview">
                @Html.Partial("~/Views/Shared/_TreeView.cshtml", menuTreeview,
                                new ViewDataDictionary { { "param", param } })
            </div>
            <div id="explore-details" class="col-md-9 explore-details">
                <div class="panel-create" id="create">
                  
                </div>
                <div class="panel-list" id="list">
                    @{Html.RenderPartial("_Details", Model);}
                </div>
            </div>
        </div>

    </div><!-- /.box-body -->
</div><!-- /.box -->

<script type="text/javascript">

    $('.menu-explore').on('click', '.listView', function (event) {
        debugger;

        var viewId = $(this).closest('.menu-explore').find('#viewType')
        if(viewId.val()==1)
        {
            viewId.val(2)
        }
        else
        {
            viewId.val(1)
        }
        var nodeId = $(this).closest('.panel-list').find('input#pMenuId').val();

        $('.menu-treeview').SelectNode(nodeId);
        
    });

    $('.menu-treeview').on('nodeClick', function (e, data) {
        debugger;
        e.stopPropagation();
        var container = $(this).closest('.menu-explore').find('.panel-list');
        var listType = $(this).closest('.menu-explore').find('#viewType').val();
        $.ajax({
            type: "get",
            url: '@Url.Action("_Details", "Menu")',
            contentType: "application/json; charset=utf-8",
            data: { parentId: data.nodeId, allowSelectGroup: data.allowSelectGroupNode, ViewType: listType },
            dataType: "html",
            success: function (html) {
                $(container).html(html);
            },
            error: function () {
                alert("error");
            }
        });
    });




    $('.menu-explore').on('click', "#btn-back", function (e) {

        $(this).closest('.menu-explore').find('.menu-treeview').moveUp();
        //$(this).closest('.menu-explore').find('.menu-treeview').updateTreeview("Menu", "_UpdateMenuTree", 1009,-1)
    });

    $('.menu-explore').on('click', ".btndrill , .listDrill", function (e) {
        var id = $(this).attr("id");
        $(this).closest('.menu-explore').find('.menu-treeview').SelectNode(id);
    });

    $('.menu-explore').on('click', '.menuImage, .editList, .btn-create-menu', function (e) {
        debugger;
        e.stopPropagation();
        var container = $(this).closest('.menu-explore').find('.panel-create');
        //----------Select active element and Id--------------------------------------------//
        var activeElement = $(this).closest('.menu-explore').find('.treeview-selected').text().trim();
        //var activeId = $(this).closest('.menu-explore').find('.treeview-selected').attr('nodeid');
        var menuId = 0;
        if ($(this).attr('class') == 'menuImage'||'editList') {
            menuId = $(this).attr('id');
        }
        var pMenuId = $('#pMenuId').val()
        if (pMenuId == "") {
            pMenuId = 0;
        }
        //-------------------------------------------------------------------------------------//
        $.ajax({
            type: "get",
            url: '@Url.Action("Create", "Menu")',
            data: { activeText: activeElement, activeId: pMenuId, menuId: menuId },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (html) {
                $(container).html(html);
                $(container).removeData("validator");
                $(container).removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse($(container));


            },
            error: function () {
                alert("error");
            }
        });
    });
    $('.menu-explore').on('click', '.deleteNode', function (e) {
        debugger;
        var menuId = $(this).attr('id');
        var nodeId = $(this).closest('.panel-list').find('#pMenuId').val()
        $.ajax({
            type: "get",
            url: '@Url.Action("Delete", "Menu")',
            data: { id: menuId },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (deleteConfirm) {
                $.MessageBox({
                    buttonDone: "Yes",
                    buttonFail: "No",
                    message: "Are you sure you want to Delete?"
                }).done(function () {
                    
                    debugger;
                    if (deleteConfirm == 'true') {
                        debugger;
                        deleteMenu(menuId,nodeId);
                    }
                    else
                    {
                        ErrorAlert("Please Delete Child Nodes First", 5000);
                    }
                })
                },
                    // $(container).html(html);
                
                    error: function () {
                        alert("error");
                    }
            });
    

    });
    function deleteMenu(menuId, nodeId) {
        debugger;

        $.ajax({
            type: 'POST',
            url: '@Url.Action("DeleteConfirm", "Menu")',
            data: { menuId: menuId },
            success: function () {
                SuccessAlert("Menu Sucessfully Deleted",5000)
                $.fn.updateTreeview('Menu', '_UpdateMenuTree', nodeId, -1);
                $.fn.GetLayoutMenu();
                
            },
            error: function () {
                alert("error");
            }
        });
        //        $.post(url, dataToPost).done(function (response, status, jqxhr) {
        //    alert();
        //})
    }


    $('.menu-treeview').on('filterTree', function (e, data) {
        debugger;
        //string filterString, bool allowSelectGroup, bool withCheckBox, bool withImageIcon
        e.stopPropagation();
        var TreeViewParam = {
            Controller: '',
            Action: '',
            WithCheckBox: data.withCheckBox,
            AllowSelectGroup: data.allowSelectGroupNode,
            WithImageIcon: data.withImageIcon,
            WithOutMe: 0,// data.withOutMe,
            Title: '',
            SelectedNodeId: 0,
            Filter: data.param.Filter,
            SelectedNodeText: ''
        }
        
        var url = "/Menu/_GetMenuTree"
        var container = $(this).closest('.menu-explore').find('.treeview-area');

        $(container).load(url, { param: TreeViewParam });

    });

    
    $('.panel-list').on('keyup', ".txtSearch", function (e) {
        debugger;
        var query = $('input.txtSearch').val();
        var filter = query.toUpperCase();
        //var checkMenu = $(this).closest('.panel-list').find('.box-body').find('col-lg-3.col-xs-6.details');
        if (filter == "") {
            $('.detailsList').each(function (index, item) {
                debugger;
                var findList = $(item).find('.inner').hasClass('listDrill');
                if (findList == true)
                {
                    $(item).css('display', 'table-row');
                }
                else
                {
                    $(item).css('display', 'block');
                }
                
            });
        }
        else {
            $('.detailsList').each(function (index, item) {
                debugger;
                var findList = $(item).find('.inner').hasClass('listDrill');
                if (findList == false) {
                    var text = $(item).find('.inner').attr('menu-caption').toUpperCase();
                    $(item).css('display', 'block');
                } else
                {
                    var text = $(item).find('.inner').attr('menu-caption').toUpperCase();
                    $(item).css('display', 'table-row');
                }
                if (text.search(filter) == -1)
                {
                    debugger;
                    $(item).css('display', 'none');
                }
              

                //$(text+':not(:contains(' + filter + '))').hide();
            });

           
        }

    });
    $.fn.GetLayoutMenu = function () {
        debugger;

        $.ajax({
            type: "POST",
            url: "/Menu/GetLayoutMenu/",
            dataType: "html",
            success: function (data) {
                $('aside.main-sidebar').html(data);
            }
        });
    };
  
</script>
