@model IEnumerable<Loader.Models.MenuTemplate>
@*<script src="~/Scripts/ch-treeview.js"></script>*@
@{
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Menu Template Setup";
    var test = Model;
}

@{

    var MenuTemplateTreeview = (Loader.ViewModel.TreeView)ViewBag.treeview;
    Loader.ViewModel.TreeViewParam param = (Loader.ViewModel.TreeViewParam)ViewData["param"];
}

<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title"> @ViewBag.Title </h3>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div><!-- /.box-tools -->
    </div><!-- /.box-header -->

    <div class="box-body">
        <div id="explorer" class="MenuTemplate-explore">
            @Html.Hidden("viewType", 1)
            
                <div id="explore-details" class="col-md-12 explore-details">
                    <div class="panel-create" id="create">

                    </div>
                    <div class="panel-list" id="list">
                        @{Html.RenderPartial("_Details", Model);}
                    </div>
                </div>
                           
                

    </div>
    
    <!-- /.box-body -->
</div><!-- /.box -->
    </div>

<div class="modal fade users-list " data-width="400" role="dialog" tabindex="-1">

</div>  
<script type="text/javascript">
 
    $('.MenuTemplate-explore').on('click', '.listView', function (event) {
        debugger;

        var viewId = $(this).closest('.MenuTemplate-explore').find('#viewType')
        if (viewId.val() == 1) {
            viewId.val(2)
        }
        else {
            viewId.val(1)
        }
        var nodeId = $(this).closest('.panel-list').find('input#pMenutemplateId').val();
        $('.panel-list').trigger('nodeClick', [{ nodeId: nodeId }]);

    });

    $('.panel-list').on('nodeClick', function (e, data) {
        debugger;
        e.stopPropagation();
        if (data.allowSelectGroupNode == null)
        {
            data.allowSelectGroupNode = false;
        }
        var container = $(this).closest('.MenuTemplate-explore').find('.panel-list');
        var listType = $(this).closest('.MenuTemplate-explore').find('#viewType').val();
        $.ajax({
            type: "get",
            url: '@Url.Action("_Details", "MenuTemplate")',
            contentType: "application/json; charset=utf-8",
            data: { allowSelectGroup: data.allowSelectGroupNode, ViewType: listType },
            dataType: "html",
            success: function (html) {
                $(container).html(html);
            },
            error: function () {
                alert("error");
            }
        });
    });
    @*$('.MenuTemplate-treeview').on('nodeClick', function (e, data) {
        debugger;
        e.stopPropagation();
        var container = $(this).closest('.MenuTemplate-explore').find('.panel-list');
        var listType = $(this).closest('.MenuTemplate-explore').find('#viewType').val();
        $.ajax({
            type: "get",
            url: '@Url.Action("_Details", "MenuTemplate")',
            contentType: "application/json; charset=utf-8",
            data: { parentId: data.nodeId, allowSelectGroup: data.allowSelectGroupNode, ViewType: listType },
            dataType: "html",
            success: function (html) {
                $(container).html(html);
            },
            error: function () {
                alert("error");
            }
        });
    });*@



    $.fn.GetLayoutMenu = function () {
        debugger;

        $.ajax({
            type: "POST",
            url: "/Menu/GetLayoutMenu/",
            dataType: "html",
            success: function (data) {
                $('aside.main-sidebar').html(data);
            }
        });
    };
    $('.MenuTemplate-explore').on('click', "#btn-back", function (e) {

        $(this).closest('.MenuTemplate-explore').find('.MenuTemplate-treeview').moveUp();
        //$(this).closest('.MenuTemplate-explore').find('.MenuTemplate-treeview').updateTreeview("MenuTemplate", "_UpdateMenuTemplateTree", 1009,-1)
    });

    $('.MenuTemplate-explore').on('click', ".btndrill , .listDrill", function (e) {
        var id = $(this).attr("id");
        $(this).closest('.MenuTemplate-explore').find('.MenuTemplate-treeview').SelectNode(id);
    });


    $('.MenuTemplate-explore').on('click', '.MenuTemplateImage, .editList, .btn-create-Menutemplates', function (e) {
        debugger;
        e.stopPropagation();
        var container = $(this).closest('.MenuTemplate-explore').find('.panel-create');
        //----------Select active element and Id--------------------------------------------//
        //var activeElement = $(this).closest('.MenuTemplate-explore').find('.treeview-selected').text().trim();
        //var activeId = $(this).closest('.MenuTemplate-explore').find('.treeview-selected').attr('nodeid');
        var MenuTemplateId = 0;
        if ($(this).attr('class') == 'MenuTemplateImage' || 'editList') {
            MenuTemplateId = $(this).attr('id');
        }
        //var pMenuTemplateId = $('#pMenuTemplateId').val()
        //if (pMenuTemplateId == "") {
        //    pMenuTemplateId = 0;
        //}
        //-------------------------------------------------------------------------------------//
        $.ajax({
            type: "get",
            url: '@Url.Action("Create", "MenuTemplate")',
            data: { MenuTemplateId: MenuTemplateId },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (html) {
            $(container).html(html);
            $(container).removeData("validator");
            $(container).removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse($(container));


            },
            error: function () {
            alert("error");
            }
            });
    });

    $('.MenuTemplate-explore').on('click', '.deleteNode', function (e) {
        debugger;
        var MenuTemplateId = $(this).attr('id');
        var nodeId = $(this).closest('.panel-list').find('input#pMenutemplateId').val()
        $.ajax({
            type: "get",
            url: '@Url.Action("Delete", "MenuTemplate")',
            data: { id: MenuTemplateId },
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (deleteConfirm) {
                if (deleteConfirm == 'false') {
                    ErrorAlert("Please Delete Child Nodes or Data Linked To Other Table First ", 5000);
                }
                else {

                
                $.MessageBox({
                    buttonDone: "Yes",
                    buttonFail: "No",
                    message: "Are you sure you want to Delete?"
                }).done(function () {
                    
                    debugger;
                    if (deleteConfirm == 'true') {
                        debugger;
                        deleteMenuTemplate(MenuTemplateId, nodeId);
                    }
                
                })
            }
            },
            // $(container).html(html);

            error: function () {
                alert("error");
            }
        });


    });
    function deleteMenuTemplate(MenuTemplateId, nodeId) {
        debugger;

        $.ajax({
            type: 'POST',
            url: '@Url.Action("DeleteConfirm", "MenuTemplate")',
            data: { MenuTemplateId: MenuTemplateId },
            success: function () {
                SuccessAlert("MenuTemplate Sucessfully Deleted", 5000)
                $('.panel-list').trigger('nodeClick', [{ nodeId: nodeId }]);
                $.fn.GetLayoutMenu();
            },
            error: function () {
                alert("error");
            }
        });
    }


    $('.Menutemplate-create').on('filterTree', '.section-treeview', function (e, data) {
        debugger;
        //string filterString, bool allowSelectGroup, bool withCheckBox, bool withImageIcon
        e.stopPropagation();
        var TreeViewParam = {
            Controller: '',
            Action: '',
            WithCheckBox: data.withCheckBox,
            AllowSelectGroup: data.allowSelectGroupNode,
            WithImageIcon: data.withImageIcon,
            WithOutMe: 0,// data.withOutMe,
            Title: '',
            SelectedNodeId: 0,
            Filter: data.param.Filter,
            SelectedNodeText: ''
        }

        var url = "/MenuTemplate/_GetMenuTemplateGroupTree"
        var container = $(this).closest('.MenuTemplate-explore').find('.treeview-area');

        $(container).load(url, { param: TreeViewParam });

    });
    $('.Menutemplate-create').on('filterTree', '.section-treeview-template', function (e, data) {
        debugger;
        //string filterString, bool allowSelectGroup, bool withCheckBox, bool withImageIcon
        e.stopPropagation();
        var TreeViewParam = {
            Controller: '',
            Action: '',
            WithCheckBox: data.withCheckBox,
            AllowSelectGroup: data.allowSelectGroupNode,
            WithImageIcon: data.withImageIcon,
            WithOutMe: 0,// data.withOutMe,
            Title: '',
            SelectedNodeId: 0,
            Filter: data.param.Filter,
            SelectedNodeText: ''
        }

        var url = "/MenuTemplate/_GetMenuTemplateGroupTree"
        var container = $(this).closest('.MenuTemplate-explore').find('.treeview-area');

        $(container).load(url, { param: TreeViewParam });

    });

    $('.panel-list').on('keyup', ".txtSearch", function (e) {
        debugger;
        var flag1 = true;
        var flag2 = true;

        var query = $('input.txtSearch').val();
        var filter = query.toUpperCase();
       
        if (filter == "") {
            $('.detailsList').each(function (index, item) {
               
                var findList = $(item).find('.inner').hasClass('listDrill');
                if (findList == true) {
                    flag1 = true;

                    $(item).css('display', 'table-row');
                }
                else {
                    flag1 = true;

                    $(item).css('display', 'block');
                }

            });
            if (flag1 === true) {
                flag2 = true;
            }
        }
        else {
            var div = document.createElement("div");
            div.innerHTML = "";
            div.style.weight = "200px";
            div.style.height = "300px";
            div.setAttribute('id', 'false-class');
            document.getElementById('box-menu-template-id').appendChild(div);

            $('.detailsList').each(function (index, item) {
                
                var findList = $(item).find('.inner').hasClass('listDrill');
                if (findList == false) {
                    flag1 = false;
                    var text = $(item).find('.inner').attr('menu-caption').toUpperCase();
                    $(item).css('display', 'block');
                } else {
                    flag1 = false;
                    var text = $(item).find('.inner').attr('menu-caption').toUpperCase();
                    $(item).css('display', 'table-row');
                }
                
                if (text.search(filter) == -1) {
                    debugger;
                    if (flag1 === false) {
                        flag2 = false;
                    }
                  
                    $(item).css('display', 'none');
                    
                    //$(falseDiv).html('<p>No child to Display</p>');



                    //$('.box-menu-template').html('<p>No child to Display</p>');
                    //var textSearch=text.search(filter);
                    //if (textSearch>=-1) {
                    //    debugger;
                    //    $('.box-menu-template').html('<p>No child to Display</p>');
                    //}
                    //if (text.search(filter).last()) {
                    //    var div = document.createElement("div");
                    //    div.innerHTML = "<p>No child to Display</p>";
                    //    div.style.weight = "200px";
                    //    div.style.height = "300px";
                    //    document.getElementById('box-menu-template-id').appendChild(div);

                    //}

                }
            
                //$(text+':not(:contains(' + filter + '))').hide();
            });
        
           
        }
        if (flag2 === false) {
            ////$('.false-class').html('');
            //document.getElementById('box-menu-template-id').appendChild(div);
            var element = document.getElementById('false-class');
            element.innerHTML = "<p>No child found to Display</p>";
            //falsediv.html('<p>No child to Display</p>');
        }
        else {
            var element = document.getElementById('false-class');
            element.innerHTML="";
        }


    });

    //function TemplateAssignedUsers(id) {
    //    debugger
    //    AjaxForm.popup("/MenuTemplate/GetUserAssignedToTemplete", { Mtid: id });
    //}


    function TemplateAssignedUsers(id) {
        debugger
        $.ajax({
            url: "/MenuTemplate/GetUserAssignedToTemplete",
            type: "GET",
            data: { Mtid: id },
            success: function (data) {

                $(".users-list").html(data);
                $(".users-list").modal("show");

                
            }
            
        });
    }

</script>

